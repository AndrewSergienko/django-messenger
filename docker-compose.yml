version: "3.2"
services:
  redis:
    restart: always
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"

  db:
    restart: always
    image: postgres:alpine
    volumes:
      - pgdata:/var/lib/postresql/data
    env_file:
      - .env.dev
    ports:
      - "5432:5432"

  api:
    restart: always
    container_name: code
    command: bash -c "python wait_for_db.py &&
                      python manage.py migrate &&
                      python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env.dev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
    command: celery -A app worker -l info
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - api

  frontend:
    restart: always
    command: npm start
    container_name: front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - api

volumes:
  pgdata: